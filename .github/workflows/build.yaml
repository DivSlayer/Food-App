name: Flutter CI

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # Checks out your repositorym

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0' # Specify your desired Flutter version

      - name: Install dependencies
        run: flutter pub get
        working-directory: mobile

      - name: Build APK # Or 'flutter build ios' for iOS
        run: flutter build apk --release
        working-directory: mobile

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: mobile/build/app/outputs/flutter-apk/app-release.apk
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref_name }} # Uses the tag that triggered the workflow
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}
            See [CHANGELOG.md](CHANGELOG.md) for details.
            *(You can also use GitHub's auto-generated release notes feature)*
          draft: false
          prerelease: false # Set to true if this is a pre-release

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Gets the upload URL from the create_release step
          asset_path: mobile/build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
