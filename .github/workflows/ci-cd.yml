name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: foodapp
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install backend deps
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Lint backend
        run: |
          cd backend
          flake8 app/

      - name: Run backend tests
        run: |
          cd backend
          pytest --maxfail=1 --disable-warnings -q

  lint-and-test-frontend:
    runs-on: ubuntu-latest
    needs: lint-and-test-backend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'

      - name: Install Flutter deps
        run: |
          cd frontend
          flutter pub get

      - name: Lint frontend
        run: |
          cd frontend
          flutter analyze

      - name: Run frontend tests
        run: |
          cd frontend
          flutter test --coverage

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint-and-test-backend, lint-and-test-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/foodapp-backend:latest backend
          docker push ${{ secrets.DOCKERHUB_USER }}/foodapp-backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/foodapp-frontend:latest frontend
          docker push ${{ secrets.DOCKERHUB_USER }}/foodapp-frontend:latest

      - name: Deploy to production
        run: |
          ssh ${{ secrets.SERVER_SSH }} "docker pull ${{ secrets.DOCKERHUB_USER }}/foodapp-backend:latest && \
                                        docker pull ${{ secrets.DOCKERHUB_USER }}/foodapp-frontend:latest && \
                                        docker-compose -f /home/deploy/foodapp/docker-compose.yml up -d --remove-orphans"
